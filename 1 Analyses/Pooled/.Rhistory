install.packages(lrd)
install.packages('lrd')
install.packages("ggplot2")
install.packages("ez")
install.packages("reshape")
install.packages("stringr")
install.packages("stringi")
58000/12
58000 - 19900
19900 * .10
38100 * .12
4572 + 1990
58000-6562
51438/12
4286.5-400-430
3456.5-1005-120-220-500-200-75-60-100-200-100-30-10
90*4
3456.5-836.5
690+210+360+200+200+50+60+100+100
1970 / 2620
851.12*2
1702.24+820
2522.24 / 3456.5
15 * 20
300 * 4
1000
1000+3456
25.48/4
6.37831
6.37831*31
4300 - 1700
900 - 250
18.22*20
364*4
1456*12
1456*24
4833 * .70
3383 - 1005 - 30 - 30 - 400 - 100 - 175 - 200 - 50 - 200
58000 - 4664
5336 * .22
53336 * .22
40525 * .22
58000 - (4664 + 8915.5)
44420.5/12
58000 - 1990
56010 * .12
6721.2+1990
58000 - 8711.2
49288 / 12
1600/200
8 * .01
8*200
8 * .01
.08 * 200
1600/2
1/800
200 * 0.00125
ink = function(x){x * 0.0025}
ink(200)
200 * 0.00125
ink(100)
ink(100)
ink(300100)
ink(100)
200 * 0.00125
ink = function(x){x * 0.00125}
ink(200)
##convert ink to dollars
ink2dollars = function(x){x * 0.00125}
ink(200)
##convert ink to dollars
ink2dollars = function(x){x * 0.00125}
ink2dollars(500)
3000*12
install.packages("rsconnect")
####Interaction between experiments?####
###General set up
##read in data
dat1 = read.csv("Ex 1 Cleaned.csv")
setwd("~/GitHub/ISREL_JOLs/1 Analyses/Pooled")
####Interaction between experiments?####
###General set up
##read in data
dat1 = read.csv("Ex 1 Cleaned.csv")
dat2 = read.csv("Ex 2 Cleaned.csv")
##load libraries
library(reshape)
library(ez)
library(psychReport)
##turn off scientific notation
options(scipen = 9)
###Start cleaning the data
##remove out of range values
dat1$JOL[dat1$JOL > 100] = NA
dat2$JOL[dat2$JOL > 100] = NA
#get recall on correct scale
dat2$Scored = dat2$Scored * 100
#get everything lined up correct for merge
colnames(dat2)[6] = "Recall"
dat1 = dat1[ , -c(3, 6)]
colnames(dat1)[6] = "Encoding"
dat1 = dat1[ , -1]
colnames(dat2)[1] = "Subject"
dat2 = dat2[ , -3]
dat1 = dat1[ , c(1, 5, 2, 3, 4, 6)]
dat1$Subject = dat1$Subject + 1000
dat2$Subject = dat2$Subject + 2000
##remove NAs
dat1 = na.omit(dat1)
dat2 = na.omit(dat2)
#now combine
combined = rbind(dat1, dat2)
#now get in long format for ANOVA
combined.long = melt(combined,
measure.vars = c("JOL", "Recall"))
colnames(combined.long)[5:6] = c("Measure", "Score")
###Analysis time
model1 = ezANOVA(combined.long,
wid = Subject,
dv = Score,
between = .(Experiment, Encoding),
within = .(Direction, Measure),
type = 3,
detailed = T)
model1
####T-test###
##break down the three-way
####T-test###
##break down the three-way (ex x direction x measure)
tappy(combined.long$Score, list(combined.long$Direction, combined.long$Measure), mean)
####T-test###
##break down the three-way (ex x direction x measure)
tapply(combined.long$Score, list(combined.long$Direction, combined.long$Measure), mean)
####T-test###
##break down the three-way (ex x direction x measure)
tapply(combined.long$Score, list(combined.long$Measure, combined.long$Direction), mean)
ex1 = subset(combined.long,
combined.long$Experiment == 1)
ex2 = subset(combined.long,
combined.long$Experiment == 2)
tapply(ex1$Score, list(ex1$Measure,ex1$Direction), mean)
tapply(ex2$Score, list(ex2$Measure,ex2$Direction), mean)
###get the data in the right form for t-tests
ex1.jol = subset(ex1,
ex1$Measure == "JOL")
ex1.r = subset(ex1,
ex1$Measure == "Recall")
ex2.jol = subset(ex2,
ex2$Measure == "JOL")
ex2.r = subset(ex2,
ex2$Measure == "Recall")
ex1.jol2 = cast(ex1.jol, Subject ~ Direction, mean)
ex2.jol2 = cast(ex2.jol, Subject ~ Direction, mean)
ex1.r2 = cast(ex1.r, Subject ~ Direction, mean)
ex2.rl2 = cast(ex2.r, Subject ~ Direction, mean)
###JOLS
##f
t.test(ex1.jol2$F, ex2.jol2$F, var.equal = T, paired = F)
###JOLS
##f
t.test(ex1.jol2$F, ex2.jol2$F, var.equal = F, paired = F)
###JOLS
##f
t.test(ex1.jol2$F, ex2.jol2$F, var.equal = T, paired = F)
##b
t.test(ex1.jol2$B, ex2.jol2$B, var.equal = T, paired = F)
###JOLS
##f
t.test(ex1.jol2$F, ex2.jol2$F, var.equal = T, paired = F)
##b
t.test(ex1.jol2$B, ex2.jol2$B, var.equal = T, paired = F)
##S
t.test(ex1.jol2$S, ex2.jol2$S, var.equal = T, paired = F)
##U
t.test(ex1.jol2$U, ex2.jol2$U, var.equal = T, paired = F)
###Recall
##f
t.test(ex1.r2$F, ex2.r2$F, var.equal = T, paired = F)
ex2.r2 = cast(ex2.r, Subject ~ Direction, mean)
###Recall
##f
t.test(ex1.r2$F, ex2.r2$F, var.equal = T, paired = F)
##b
t.test(ex1.r2$B, ex2.r2$B, var.equal = T, paired = F)
##S
t.test(ex1.r2$S, ex2.r2$S, var.equal = T, paired = F)
##U
t.test(ex1.r2$U, ex2.r2$U, var.equal = T, paired = F)
